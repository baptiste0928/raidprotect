name: CI

on:
  pull_request:
  push:
    branches: ["main"]

jobs:
  check:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: hecrj/setup-rust-action@v1

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Run cargo test
        run: cargo test --all-features

  clippy:
    name: Clippy
    needs: [check]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Run clippy
        env:
          RUSTFLAGS: -D warnings
        run: cargo clippy --all-features --tests

  build-docs:
    name: Build docs
    needs: [check]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: hecrj/setup-rust-action@v1

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Build docs
        env:
          RUSTDOCFLAGS: -D rustdoc::broken_intra_doc_links
        run: cargo doc --no-deps --all-features

  deps:
    name: Audit dependencies
    needs: [check]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: hecrj/setup-rust-action@v1

      - name: Install cargo-deny
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-deny

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Audit dependencies
        run: cargo deny check

  rustfmt:
    name: Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup Rust toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: nightly
          components: rustfmt

      - name: Run cargo fmt
        run: cargo +nightly fmt --all -- --check

      - name: Run codespell
        uses: codespell-project/actions-codespell@master
